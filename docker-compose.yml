version: "2.4"
services:
  app:
    build:
      context: app
      dockerfile: dockers/dev.Dockerfile
    volumes:
      # For host/container sync and hot reload
      - ./app:/opt/app
      # ignore node_modules, should be added also in .dockerignore [MANDATORY]
      - /opt/app/leek/web/node_modules/
    environment:
      # General
      - LEEK_ENV=DEV
      - LEEK_API_LOG_LEVEL=INFO
      - LEEK_AGENT_LOG_LEVEL=INFO
      # Authorization
      - LEEK_API_AUTHORIZED_AUDIENCES=kodhive-leek
      - LEEK_API_OWNER_ORG=ramp.com
      - LEEK_API_WHITELISTED_ORGS=ramp.com,
      # Components
      - LEEK_ENABLE_API=ENABLE
      - LEEK_ENABLE_AGENT=ENABLE
      - LEEK_ENABLE_WEB=ENABLE
      - LEEK_ENABLE_ES=ENABLE
      # URLs
      - LEEK_API_URL=http://0.0.0.0:5000
      - LEEK_WEB_URL=http://0.0.0.0:8000
      - LEEK_ES_DOMAIN_URL=http://0.0.0.0:9200
      # Authentication
      - LEEK_FIREBASE_PROJECT_ID=kodhive-leek
      - LEEK_FIREBASE_APP_ID=1:894368938723:web:e14677d1835ce9bd09e3d6
      - LEEK_FIREBASE_API_KEY=AIzaSyBiv9xF6VjDsv62ufzUb9aFJUreHQaFoDk
      - LEEK_FIREBASE_AUTH_DOMAIN=kodhive-leek.firebaseapp.com
      # Others
      - LEEK_ES_CREATE_LIFECYCLE_AFTER_CONNECTION=true
    ports:
      - 5000:5000
      - 80:80
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5000" ]
      interval: 2s
      timeout: 4s
      retries: 20
    depends_on:
      es01:
        condition: service_healthy
      mq:
        condition: service_healthy

  # Just for local development!! (Test worker)
  worker:
    build:
      context: test
    environment:
      - BROKER_URL=pyamqp://admin:admin@mq:5672
    depends_on:
      mq:
        condition: service_healthy

  # Just for local development!! (Test client)
  publisher:
    build:
      context: test
    environment:
      - BROKER_URL=pyamqp://admin:admin@mq:5672
      - CELERY_SEND_SENT_EVENT=True
      - CELERY_SEND_TASK_SENT_EVENT=True
    command: >
      bash -c "python3 publisher.py"
    depends_on:
      mq:
        condition: service_healthy

  # Just for local development!! (Test broker)
  mq:
    image: rabbitmq:3.8.9-management-alpine
    volumes:
      - ./test/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 2s
      timeout: 4s
      retries: 20


  # Just for local development!! (Test index db)
  es01:
    image: elasticsearch:7.8.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01 # ,es02
      #      - discovery.seed_hosts=es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    command: ["elasticsearch", "-Elogger.level=ERROR"]
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
